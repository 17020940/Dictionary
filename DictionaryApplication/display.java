/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dictionary;

import com.sun.speech.freetts.Voice;
import com.sun.speech.freetts.VoiceManager;
import java.awt.Component;
import java.io.FileNotFoundException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author DUC_NHA
 */
public class display extends javax.swing.JFrame {

    /**
     * Creates new form display
     */
    public display() {
        initComponents();
        voice = vm.getVoice(voiceName);
        voice.allocate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        Detail = new javax.swing.JTextArea();
        Speaker = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Repair = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ResultSeach = new javax.swing.JList<>();
        Word_target = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        History = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        API = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Dictionary");
        setLocation(new java.awt.Point(0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Detail.setColumns(20);
        Detail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Detail.setLineWrap(true);
        Detail.setRows(5);
        Detail.setWrapStyleWord(true);
        Detail.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Detail.setKeymap(null);
        jScrollPane1.setViewportView(Detail);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(303, 204, 650, 420));

        Speaker.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dictionary/icons/Speaker_32px.png"))); // NOI18N
        Speaker.setBorder(null);
        Speaker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpeakerActionPerformed(evt);
            }
        });
        getContentPane().add(Speaker, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 40, 40));

        Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dictionary/icons/Add_32px.png"))); // NOI18N
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        getContentPane().add(Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 45, -1));

        Repair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dictionary/icons/Maintenance_32px.png"))); // NOI18N
        Repair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RepairActionPerformed(evt);
            }
        });
        getContentPane().add(Repair, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 150, 46, -1));

        Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dictionary/icons/Waste_32px.png"))); // NOI18N
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        getContentPane().add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 150, 45, -1));

        Save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dictionary/icons/Save_32px.png"))); // NOI18N
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        getContentPane().add(Save, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 150, 45, -1));

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        ResultSeach.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ResultSeach.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ResultSeach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResultSeachMouseClicked(evt);
            }
        });
        ResultSeach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ResultSeachKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ResultSeachKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(ResultSeach);

        Word_target.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Word_target.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Word_target.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Word_targetActionPerformed(evt);
            }
        });
        Word_target.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Word_targetKeyReleased(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dictionary/icons/Search_32px.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Word_target, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Word_target))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("     Seach     ", jPanel1);

        History.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        History.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HistoryMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(History);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("    History     ", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 117, 290, 500));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dictionary/icons/Checked_32px.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 150, 46, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Dịch nhanh : Bật");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 160, 120, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 255));
        jLabel2.setText("D");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 8, -1, 100));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("I");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 10, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 153, 0));
        jLabel4.setText("C");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 255, 51));
        jLabel5.setText("T");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 10, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 255, 255));
        jLabel6.setText("I");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(421, 10, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 51));
        jLabel7.setText("O");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 10, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setText("N");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(544, 10, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 255, 51));
        jLabel9.setText("A");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 10, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 0, 153));
        jLabel10.setText("R");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(681, 10, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 255));
        jLabel11.setText("Y");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(749, 10, -1, -1));

        API.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dictionary/icons/Google Translate_32px.png"))); // NOI18N
        API.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                APIActionPerformed(evt);
            }
        });
        getContentPane().add(API, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 150, 50, -1));

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public boolean save = true ;
    public DictionaryManagement DM = new DictionaryManagement();    
    private static final String voiceName = "kevin16";
    public Voice voice;
    public VoiceManager vm = VoiceManager.getInstance();
    public  DefaultListModel listHistory = new DefaultListModel();
    public boolean quick = true ;
    public String speaker ="";
    private void SpeakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpeakerActionPerformed

		try {
			voice.speak(speaker);
		} catch (Exception e) {
			
			// TODO: handle exception
		}// TODO add your handling code here:
    }//GEN-LAST:event_SpeakerActionPerformed

        //DefaultListModel list = new DefaultListModel();
    private void Word_targetKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Word_targetKeyReleased
        //TODO add your handling code here:
        if (evt.getKeyCode()==evt.VK_BACK_SPACE)Detail.setText("");
        if (evt.getKeyCode() == evt.VK_DOWN) ResultSeach.requestFocus();
        DefaultListModel list = new DefaultListModel();
        String str = Word_target.getText();
        speaker = str ;
        if (!"".equals(str)){
            int j = DM.seach(str);
            if (j>-1){
                DM.resultSearch(str).forEach((s) -> {
                    list.addElement(s);
                });}
            if (quick){
                int i = DM.dictionaryLookUp(str);
                if (i>-1){
                    Detail.setText("");
                    ArrayList<String> detail = DM.getDictionary().get(DM.dictionaryLookUp(str)).getDetail();
                    detail.forEach((s) -> {
                        if (!"".equals(s)) Detail.append( s +"\n");

                    });
                    Detail.setCaretPosition(0);
                }
                else {
                    Detail.setText("Can not found");
                }
            }
        }
        ResultSeach.setModel(list);
    }//GEN-LAST:event_Word_targetKeyReleased

    private void ResultSeachKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ResultSeachKeyPressed
        if (!quick){
            char e = evt.getKeyChar();
            if ( e == '\n'){
            String str;
            str = ResultSeach.getSelectedValue();
            speaker = str ;
            Detail.setText("");
            int i = DM.dictionaryLookUp(str);
            if (i>-1){
                ArrayList<String> detail = DM.getDictionary().get(DM.dictionaryLookUp(str)).getDetail();
                detail.forEach((s) -> {
                    if (!"".equals(s)) Detail.append( s +"\n");

                });
                Detail.setCaretPosition(0);
            }
            Word_target.setText(str);  
            listHistory.add(0, str);
            History.setModel(listHistory);
            }
            else {
                Detail.setText("");
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_ResultSeachKeyPressed

    private void ResultSeachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResultSeachMouseClicked
        if (ResultSeach.getModel().getSize()>0){
            String str;
            str = ResultSeach.getSelectedValue();
            speaker = str ;
            Detail.setText("");
            int i = DM.dictionaryLookUp(str);
            if (i>-1){
                ArrayList<String> detail = DM.getDictionary().get(DM.dictionaryLookUp(str)).getDetail();
                detail.forEach((s) -> {
                    Detail.append( s +"\n");

                });
                Detail.setCaretPosition(0);
            }
            Word_target.setText(str);
            listHistory.add(0,str);
            History.setModel(listHistory);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ResultSeachMouseClicked

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        AddMassage Am = new AddMassage(this, true);
        Am.setVisible(true);
        Word word = new Word(Am.word_target, Am.detail);
        if (!"".equals(word.getWord_target())){
            if (DM.dictionaryLookUp(Am.word_target)<1){
                DM.add(word);
                save =false;
                JOptionPane.showMessageDialog(rootPane, "Thêm thành công");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Từ đã có trong danh sách");
            }
        }
        // TODO add your handling code here:

    }//GEN-LAST:event_AddActionPerformed

    private void RepairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RepairActionPerformed
        RepairMessage Rm = new RepairMessage(this, true);
        Rm.setVisible(true);
        if (!"".equals(Rm.newWord) && !"".equals(Rm.lastWord)){
            DM.getDictionary().remove(DM.dictionaryLookUp(Rm.lastWord));
            Word word = new Word(Rm.newWord, Rm.Detail);
            DM.add(word);
            save =false;
            JOptionPane.showMessageDialog(rootPane, "Sửa thành công");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_RepairActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        MessageDelete md = new MessageDelete(this, true);
        md.setVisible(true);
        String str = md.str;
        int i = DM.dictionaryLookUp(str);
        if ( !"".equals(str)){
             if ( i > 0) {
                DM.getDictionary().remove(i);
                save =false ;
                JOptionPane.showMessageDialog(rootPane, "Xóa thành công");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Không có từ này trong danh sách");
            }
        }
        
// TODO add your handling code here:
    }//GEN-LAST:event_DeleteActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        try {
            DM.addTxt();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(display.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(display.class.getName()).log(Level.SEVERE, null, ex);
        }
        save = true ;
        JOptionPane.showMessageDialog(rootPane, "Lưu thành công");

// TODO add your handling code here:
    }//GEN-LAST:event_SaveActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       if (save == true){
           System.exit(0);
       }
       else {
            Save sav = new Save(this, true);
            sav.setVisible(true);
            if ("yes".equals(sav.str)){
                    try {
                    DM.addTxt();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(display.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(display.class.getName()).log(Level.SEVERE, null, ex);
                }
                System.exit(0);
            }
            if ("no".equals(sav.str)){
                System.exit(0);
            }
            
       }
    }//GEN-LAST:event_formWindowClosing

    private void Word_targetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Word_targetActionPerformed
        String str = Word_target.getText();
        speaker = str ;
        listHistory.add(0, str);
        History.setModel(listHistory);
        Detail.setText("");
        if (!"".equals(str)){
            int i = DM.dictionaryLookUp(str);
            if (i>-1){
                ArrayList<String> detail = DM.getDictionary().get(DM.dictionaryLookUp(str)).getDetail();
                detail.forEach((s) -> {
                    if (!"".equals(s)) Detail.append( s +"\n");

                });
                Detail.setCaretPosition(0);
            }
            else {
                Detail.setText("Can not found");
            }
        }
    }//GEN-LAST:event_Word_targetActionPerformed

    private void HistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HistoryMouseClicked
        String str;
        str = History.getSelectedValue();
        speaker = str ;
        Detail.setText("");
        int i = DM.dictionaryLookUp(str);
        if (i>-1){
            ArrayList<String> detail = DM.getDictionary().get(DM.dictionaryLookUp(str)).getDetail();
            detail.forEach((s) -> {
                Detail.append( s +"\n");

            });
            Detail.setCaretPosition(0);
        }
         else {
                Detail.setText("Can not found");
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_HistoryMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String str = Word_target.getText();
        speaker = str ;
        listHistory.add(0, str);
        History.setModel(listHistory);
        Detail.setText("");
        if (!"".equals(str)){
            int i = DM.dictionaryLookUp(str);
            if (i>-1){
                ArrayList<String> detail = DM.getDictionary().get(DM.dictionaryLookUp(str)).getDetail();
                detail.forEach((s) -> {
                    if (!"".equals(s)) Detail.append( s +"\n");

                });
                Detail.setCaretPosition(0);
            }
            else {
                Detail.setText("Can not found");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(quick){
            quick = false ;
            jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dictionary/icons/Cancel_32px.png")));
            jLabel1.setText("Dịch nhanh : Tắt");
        }
        else {
            quick = true ;
            jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dictionary/icons/Checked_32px.png")));
            jLabel1.setText("Dịch nhanh : Bật");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ResultSeachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ResultSeachKeyReleased
        if (quick){
        char e = evt.getKeyChar();
        String str;
        str = ResultSeach.getSelectedValue();
        speaker = str ;
        Detail.setText("");
        int i = DM.dictionaryLookUp(str);
        if (i>-1){
            ArrayList<String> detail = DM.getDictionary().get(DM.dictionaryLookUp(str)).getDetail();
            detail.forEach((s) -> {
                if (!"".equals(s)) Detail.append( s +"\n");

            });
            Detail.setCaretPosition(0);
        }
        Word_target.setText(str);  
        }              // TODO add your handling code here:
    }//GEN-LAST:event_ResultSeachKeyReleased

    private void APIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_APIActionPerformed
        API api = new API(this, true);
        api.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_APIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new display().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton API;
    private javax.swing.JButton Add;
    private javax.swing.JButton Delete;
    private javax.swing.JTextArea Detail;
    private javax.swing.JList<String> History;
    private javax.swing.JButton Repair;
    private javax.swing.JList<String> ResultSeach;
    private javax.swing.JButton Save;
    private javax.swing.JButton Speaker;
    private javax.swing.JTextField Word_target;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
